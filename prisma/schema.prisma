generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(uuid())
  name  String
  email String @unique
}

model Event {
  id          String   @id @default(uuid())
  aggregateId String   // เช่น userId
  type        String   // เช่น "UserCreated"
  payload     Json     // data ของ event
  timestamp   DateTime @default(now())
}
model Order {
  id           String    @id @default(cuid())
  userId       String
  totalAmount  Float
  status       OrderStatus @default(PENDING)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  items        OrderItem[]
}

model OrderItem {
  id        String   @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

enum OrderStatus {
  PENDING
  INVENTORY_RESERVED
  PAID
  COMPLETED
  FAILED
}

model Inventory {
  id         String   @id @default(cuid())  // ใช้ cuid() เพื่อสร้าง id อัตโนมัติ
  productId  String   @unique               // รหัสสินค้า (product SKU หรือรหัสอื่นๆ ที่ไม่ซ้ำกัน)
  stock      Int      @default(0)           // จำนวนสินค้าในสต๊อก
  reserved   Int      @default(0)           // จำนวนสินค้าที่จองแล้ว
  createdAt  DateTime @default(now())       // เวลาในการสร้างข้อมูล
  updatedAt  DateTime @updatedAt           // เวลาในการอัปเดตข้อมูล

  @@index([productId])  // สร้าง index เพื่อเพิ่มประสิทธิภาพในการค้นหา
}